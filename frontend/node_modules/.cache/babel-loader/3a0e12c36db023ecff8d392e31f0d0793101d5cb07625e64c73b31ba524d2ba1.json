{"ast":null,"code":"import _inherits from \"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { signProfileToken, extractProfile } from './profileTokens';\nimport { getPersonFromLegacyFormat } from './profileSchemas';\nimport { getName, getFamilyName, getGivenName, getAvatarUrl, getDescription, getVerifiedAccounts, getAddress, getBirthDate, getConnections, getOrganizations } from './profileSchemas/personUtils';\nimport { makeZoneFile, parseZoneFile } from 'zone-file';\nimport * as inspector from 'schema-inspector';\nimport { Logger } from '@stacks/common';\nimport { createFetchFn } from '@stacks/network';\nvar schemaDefinition = {\n  type: 'object',\n  properties: {\n    '@context': {\n      type: 'string',\n      optional: true\n    },\n    '@type': {\n      type: 'string'\n    }\n  }\n};\nexport var Profile = /*#__PURE__*/function () {\n  function Profile() {\n    var profile = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Profile);\n    this._profile = Object.assign({}, {\n      '@context': 'http://schema.org/'\n    }, profile);\n  }\n  _createClass(Profile, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return Object.assign({}, this._profile);\n    }\n  }, {\n    key: \"toToken\",\n    value: function toToken(privateKey) {\n      return signProfileToken(this.toJSON(), privateKey);\n    }\n  }], [{\n    key: \"validateSchema\",\n    value: function validateSchema(profile) {\n      var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      schemaDefinition.strict = strict;\n      return inspector.validate(schemaDefinition, profile);\n    }\n  }, {\n    key: \"fromToken\",\n    value: function fromToken(token) {\n      var publicKeyOrAddress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var profile = extractProfile(token, publicKeyOrAddress);\n      return new Profile(profile);\n    }\n  }, {\n    key: \"makeZoneFile\",\n    value: function makeZoneFile(domainName, tokenFileURL) {\n      return makeProfileZoneFile(domainName, tokenFileURL);\n    }\n  }]);\n  return Profile;\n}();\nvar personSchemaDefinition = {\n  type: 'object',\n  strict: false,\n  properties: {\n    '@context': {\n      type: 'string',\n      optional: true\n    },\n    '@type': {\n      type: 'string'\n    },\n    '@id': {\n      type: 'string',\n      optional: true\n    },\n    name: {\n      type: 'string',\n      optional: true\n    },\n    givenName: {\n      type: 'string',\n      optional: true\n    },\n    familyName: {\n      type: 'string',\n      optional: true\n    },\n    description: {\n      type: 'string',\n      optional: true\n    },\n    image: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          name: {\n            type: 'string',\n            optional: true\n          },\n          contentUrl: {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    website: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          url: {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    account: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          service: {\n            type: 'string',\n            optional: true\n          },\n          identifier: {\n            type: 'string',\n            optional: true\n          },\n          proofType: {\n            type: 'string',\n            optional: true\n          },\n          proofUrl: {\n            type: 'string',\n            optional: true\n          },\n          proofMessage: {\n            type: 'string',\n            optional: true\n          },\n          proofSignature: {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    worksFor: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          '@id': {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    knows: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          '@id': {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    address: {\n      type: 'object',\n      optional: true,\n      properties: {\n        '@type': {\n          type: 'string'\n        },\n        streetAddress: {\n          type: 'string',\n          optional: true\n        },\n        addressLocality: {\n          type: 'string',\n          optional: true\n        },\n        postalCode: {\n          type: 'string',\n          optional: true\n        },\n        addressCountry: {\n          type: 'string',\n          optional: true\n        }\n      }\n    },\n    birthDate: {\n      type: 'string',\n      optional: true\n    },\n    taxID: {\n      type: 'string',\n      optional: true\n    }\n  }\n};\nexport var Person = /*#__PURE__*/function (_Profile) {\n  _inherits(Person, _Profile);\n  var _super = _createSuper(Person);\n  function Person() {\n    var _this;\n    var profile = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      '@type': 'Person'\n    };\n    _classCallCheck(this, Person);\n    _this = _super.call(this, profile);\n    _this._profile = Object.assign({}, {\n      '@type': 'Person'\n    }, _this._profile);\n    return _this;\n  }\n  _createClass(Person, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        profile: this.profile(),\n        name: this.name(),\n        givenName: this.givenName(),\n        familyName: this.familyName(),\n        description: this.description(),\n        avatarUrl: this.avatarUrl(),\n        verifiedAccounts: this.verifiedAccounts(),\n        address: this.address(),\n        birthDate: this.birthDate(),\n        connections: this.connections(),\n        organizations: this.organizations()\n      };\n    }\n  }, {\n    key: \"profile\",\n    value: function profile() {\n      return Object.assign({}, this._profile);\n    }\n  }, {\n    key: \"name\",\n    value: function name() {\n      return getName(this.profile());\n    }\n  }, {\n    key: \"givenName\",\n    value: function givenName() {\n      return getGivenName(this.profile());\n    }\n  }, {\n    key: \"familyName\",\n    value: function familyName() {\n      return getFamilyName(this.profile());\n    }\n  }, {\n    key: \"description\",\n    value: function description() {\n      return getDescription(this.profile());\n    }\n  }, {\n    key: \"avatarUrl\",\n    value: function avatarUrl() {\n      return getAvatarUrl(this.profile());\n    }\n  }, {\n    key: \"verifiedAccounts\",\n    value: function verifiedAccounts(verifications) {\n      return getVerifiedAccounts(this.profile(), verifications);\n    }\n  }, {\n    key: \"address\",\n    value: function address() {\n      return getAddress(this.profile());\n    }\n  }, {\n    key: \"birthDate\",\n    value: function birthDate() {\n      return getBirthDate(this.profile());\n    }\n  }, {\n    key: \"connections\",\n    value: function connections() {\n      return getConnections(this.profile());\n    }\n  }, {\n    key: \"organizations\",\n    value: function organizations() {\n      return getOrganizations(this.profile());\n    }\n  }], [{\n    key: \"validateSchema\",\n    value: function validateSchema(profile) {\n      var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      personSchemaDefinition.strict = strict;\n      return inspector.validate(schemaDefinition, profile);\n    }\n  }, {\n    key: \"fromToken\",\n    value: function fromToken(token) {\n      var publicKeyOrAddress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var profile = extractProfile(token, publicKeyOrAddress);\n      return new Person(profile);\n    }\n  }, {\n    key: \"fromLegacyFormat\",\n    value: function fromLegacyFormat(legacyProfile) {\n      var profile = getPersonFromLegacyFormat(legacyProfile);\n      return new Person(profile);\n    }\n  }]);\n  return Person;\n}(Profile);\nexport function makeProfileZoneFile(origin, tokenFileUrl) {\n  if (!tokenFileUrl.includes('://')) {\n    throw new Error('Invalid token file url');\n  }\n  var urlScheme = tokenFileUrl.split('://')[0];\n  var urlParts = tokenFileUrl.split('://')[1].split('/');\n  var domain = urlParts[0];\n  var pathname = \"/\".concat(urlParts.slice(1).join('/'));\n  var zoneFile = {\n    $origin: origin,\n    $ttl: 3600,\n    uri: [{\n      name: '_http._tcp',\n      priority: 10,\n      weight: 1,\n      target: \"\".concat(urlScheme, \"://\").concat(domain).concat(pathname)\n    }]\n  };\n  var zoneFileTemplate = '{$origin}\\n{$ttl}\\n{uri}\\n';\n  return makeZoneFile(zoneFile, zoneFileTemplate);\n}\nexport function getTokenFileUrl(zoneFileJson) {\n  if (!zoneFileJson.hasOwnProperty('uri')) {\n    return null;\n  }\n  if (!Array.isArray(zoneFileJson.uri)) {\n    return null;\n  }\n  if (zoneFileJson.uri.length < 1) {\n    return null;\n  }\n  var validRecords = zoneFileJson.uri.filter(function (record) {\n    return record.hasOwnProperty('target') && record.name === '_http._tcp';\n  });\n  if (validRecords.length < 1) {\n    return null;\n  }\n  var firstValidRecord = validRecords[0];\n  if (!firstValidRecord.hasOwnProperty('target')) {\n    return null;\n  }\n  var tokenFileUrl = firstValidRecord.target;\n  if (tokenFileUrl.startsWith('https')) {} else if (tokenFileUrl.startsWith('http')) {} else {\n    tokenFileUrl = \"https://\".concat(tokenFileUrl);\n  }\n  return tokenFileUrl;\n}\nexport function resolveZoneFileToProfile(zoneFile, publicKeyOrAddress) {\n  var fetchFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : createFetchFn();\n  return new Promise(function (resolve, reject) {\n    var zoneFileJson = null;\n    try {\n      zoneFileJson = parseZoneFile(zoneFile);\n      if (!zoneFileJson.hasOwnProperty('$origin')) {\n        zoneFileJson = null;\n      }\n    } catch (e) {\n      reject(e);\n    }\n    var tokenFileUrl = null;\n    if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n      tokenFileUrl = getTokenFileUrl(zoneFileJson);\n    } else {\n      try {\n        return resolve(Person.fromLegacyFormat(JSON.parse(zoneFile)).profile());\n      } catch (error) {\n        return reject(error);\n      }\n    }\n    if (tokenFileUrl) {\n      fetchFn(tokenFileUrl).then(function (response) {\n        return response.text();\n      }).then(function (responseText) {\n        return JSON.parse(responseText);\n      }).then(function (responseJson) {\n        var tokenRecords = responseJson;\n        var profile = extractProfile(tokenRecords[0].token, publicKeyOrAddress);\n        resolve(profile);\n      }).catch(function (error) {\n        Logger.error(\"resolveZoneFileToProfile: error fetching token file \".concat(tokenFileUrl, \": \").concat(error));\n        reject(error);\n      });\n    } else {\n      Logger.debug('Token file url not found. Resolving to blank profile.');\n      resolve({});\n    }\n  });\n}","map":{"version":3,"names":["signProfileToken","extractProfile","getPersonFromLegacyFormat","getName","getFamilyName","getGivenName","getAvatarUrl","getDescription","getVerifiedAccounts","getAddress","getBirthDate","getConnections","getOrganizations","makeZoneFile","parseZoneFile","inspector","Logger","createFetchFn","schemaDefinition","type","properties","optional","Profile","profile","arguments","length","undefined","_classCallCheck","_profile","Object","assign","_createClass","key","value","toJSON","toToken","privateKey","validateSchema","strict","validate","fromToken","token","publicKeyOrAddress","domainName","tokenFileURL","makeProfileZoneFile","personSchemaDefinition","name","givenName","familyName","description","image","items","contentUrl","website","url","account","service","identifier","proofType","proofUrl","proofMessage","proofSignature","worksFor","knows","address","streetAddress","addressLocality","postalCode","addressCountry","birthDate","taxID","Person","_Profile","_inherits","_super","_createSuper","_this","call","avatarUrl","verifiedAccounts","connections","organizations","verifications","fromLegacyFormat","legacyProfile","origin","tokenFileUrl","includes","Error","urlScheme","split","urlParts","domain","pathname","concat","slice","join","zoneFile","$origin","$ttl","uri","priority","weight","target","zoneFileTemplate","getTokenFileUrl","zoneFileJson","hasOwnProperty","Array","isArray","validRecords","filter","record","firstValidRecord","startsWith","resolveZoneFileToProfile","fetchFn","Promise","resolve","reject","e","keys","JSON","parse","error","then","response","text","responseText","responseJson","tokenRecords","catch","debug"],"sources":["C:\\Users\\rajde\\gitrep\\deploy\\frontend\\node_modules\\@stacks\\profile\\src\\profile.ts"],"sourcesContent":["import { signProfileToken, extractProfile } from './profileTokens';\n\nimport { getPersonFromLegacyFormat } from './profileSchemas';\nimport {\n  getName,\n  getFamilyName,\n  getGivenName,\n  getAvatarUrl,\n  getDescription,\n  getVerifiedAccounts,\n  getAddress,\n  getBirthDate,\n  getConnections,\n  getOrganizations,\n} from './profileSchemas/personUtils';\n\n// TODO: bring into this monorepo/convert to ts\n// @ts-ignore\nimport { makeZoneFile, parseZoneFile } from 'zone-file';\n\n// Could not find a declaration file for module\n// @ts-ignore\nimport * as inspector from 'schema-inspector';\n\nimport { Logger } from '@stacks/common';\nimport { createFetchFn, FetchFn } from '@stacks/network';\nimport { PublicPersonProfile } from './types';\n\nconst schemaDefinition: { [key: string]: any } = {\n  type: 'object',\n  properties: {\n    '@context': { type: 'string', optional: true },\n    '@type': { type: 'string' },\n  },\n};\n\n/**\n * Represents a user profile\n */\nexport class Profile {\n  _profile: { [key: string]: any };\n\n  constructor(profile = {}) {\n    this._profile = Object.assign(\n      {},\n      {\n        '@context': 'http://schema.org/',\n      },\n      profile\n    );\n  }\n\n  toJSON() {\n    return Object.assign({}, this._profile);\n  }\n\n  toToken(privateKey: string): string {\n    return signProfileToken(this.toJSON(), privateKey);\n  }\n\n  static validateSchema(profile: any, strict = false): any {\n    schemaDefinition.strict = strict;\n    return inspector.validate(schemaDefinition, profile);\n  }\n\n  static fromToken(token: string, publicKeyOrAddress: string | null = null): Profile {\n    const profile = extractProfile(token, publicKeyOrAddress);\n    return new Profile(profile);\n  }\n\n  static makeZoneFile(domainName: string, tokenFileURL: string): string {\n    return makeProfileZoneFile(domainName, tokenFileURL);\n  }\n}\n\nconst personSchemaDefinition = {\n  type: 'object',\n  strict: false,\n  properties: {\n    '@context': { type: 'string', optional: true },\n    '@type': { type: 'string' },\n    '@id': { type: 'string', optional: true },\n    name: { type: 'string', optional: true },\n    givenName: { type: 'string', optional: true },\n    familyName: { type: 'string', optional: true },\n    description: { type: 'string', optional: true },\n    image: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          name: { type: 'string', optional: true },\n          contentUrl: { type: 'string', optional: true },\n        },\n      },\n    },\n    website: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          url: { type: 'string', optional: true },\n        },\n      },\n    },\n    account: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          service: { type: 'string', optional: true },\n          identifier: { type: 'string', optional: true },\n          proofType: { type: 'string', optional: true },\n          proofUrl: { type: 'string', optional: true },\n          proofMessage: { type: 'string', optional: true },\n          proofSignature: { type: 'string', optional: true },\n        },\n      },\n    },\n    worksFor: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          '@id': { type: 'string', optional: true },\n        },\n      },\n    },\n    knows: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          '@id': { type: 'string', optional: true },\n        },\n      },\n    },\n    address: {\n      type: 'object',\n      optional: true,\n      properties: {\n        '@type': { type: 'string' },\n        streetAddress: { type: 'string', optional: true },\n        addressLocality: { type: 'string', optional: true },\n        postalCode: { type: 'string', optional: true },\n        addressCountry: { type: 'string', optional: true },\n      },\n    },\n    birthDate: { type: 'string', optional: true },\n    taxID: { type: 'string', optional: true },\n  },\n};\n\n/**\n * @ignore\n */\nexport class Person extends Profile {\n  constructor(profile: PublicPersonProfile = { '@type': 'Person' }) {\n    super(profile);\n    this._profile = Object.assign(\n      {},\n      {\n        '@type': 'Person',\n      },\n      this._profile\n    );\n  }\n\n  static validateSchema(profile: any, strict = false) {\n    personSchemaDefinition.strict = strict;\n    return inspector.validate(schemaDefinition, profile);\n  }\n\n  static fromToken(token: string, publicKeyOrAddress: string | null = null): Person {\n    const profile = extractProfile(token, publicKeyOrAddress) as PublicPersonProfile;\n    return new Person(profile);\n  }\n\n  static fromLegacyFormat(legacyProfile: any) {\n    const profile = getPersonFromLegacyFormat(legacyProfile);\n    return new Person(profile);\n  }\n\n  toJSON() {\n    return {\n      profile: this.profile(),\n      name: this.name(),\n      givenName: this.givenName(),\n      familyName: this.familyName(),\n      description: this.description(),\n      avatarUrl: this.avatarUrl(),\n      verifiedAccounts: this.verifiedAccounts(),\n      address: this.address(),\n      birthDate: this.birthDate(),\n      connections: this.connections(),\n      organizations: this.organizations(),\n    };\n  }\n\n  profile() {\n    return Object.assign({}, this._profile);\n  }\n\n  name() {\n    return getName(this.profile());\n  }\n\n  givenName() {\n    return getGivenName(this.profile());\n  }\n\n  familyName() {\n    return getFamilyName(this.profile());\n  }\n\n  description() {\n    return getDescription(this.profile());\n  }\n\n  avatarUrl() {\n    return getAvatarUrl(this.profile());\n  }\n\n  verifiedAccounts(verifications?: any[]) {\n    return getVerifiedAccounts(this.profile(), verifications);\n  }\n\n  address() {\n    return getAddress(this.profile());\n  }\n\n  birthDate() {\n    return getBirthDate(this.profile());\n  }\n\n  connections() {\n    return getConnections(this.profile());\n  }\n\n  organizations() {\n    return getOrganizations(this.profile());\n  }\n}\n\n/**\n *\n * @param origin\n * @param tokenFileUrl\n *\n * @ignore\n */\nexport function makeProfileZoneFile(origin: string, tokenFileUrl: string): string {\n  if (!tokenFileUrl.includes('://')) {\n    throw new Error('Invalid token file url');\n  }\n\n  const urlScheme = tokenFileUrl.split('://')[0];\n  const urlParts = tokenFileUrl.split('://')[1].split('/');\n  const domain = urlParts[0];\n  const pathname = `/${urlParts.slice(1).join('/')}`;\n\n  const zoneFile = {\n    $origin: origin,\n    $ttl: 3600,\n    uri: [\n      {\n        name: '_http._tcp',\n        priority: 10,\n        weight: 1,\n        target: `${urlScheme}://${domain}${pathname}`,\n      },\n    ],\n  };\n\n  const zoneFileTemplate = '{$origin}\\n{$ttl}\\n{uri}\\n';\n\n  return makeZoneFile(zoneFile, zoneFileTemplate);\n}\n\n/**\n *\n * @param zoneFileJson\n *\n * @ignore\n */\nexport function getTokenFileUrl(zoneFileJson: any): string | null {\n  if (!zoneFileJson.hasOwnProperty('uri')) {\n    return null;\n  }\n  if (!Array.isArray(zoneFileJson.uri)) {\n    return null;\n  }\n  if (zoneFileJson.uri.length < 1) {\n    return null;\n  }\n\n  const validRecords = zoneFileJson.uri.filter(\n    (record: any) => record.hasOwnProperty('target') && record.name === '_http._tcp'\n  );\n\n  if (validRecords.length < 1) {\n    return null;\n  }\n\n  const firstValidRecord = validRecords[0];\n\n  if (!firstValidRecord.hasOwnProperty('target')) {\n    return null;\n  }\n  let tokenFileUrl = firstValidRecord.target;\n\n  if (tokenFileUrl.startsWith('https')) {\n    // pass\n  } else if (tokenFileUrl.startsWith('http')) {\n    // pass\n  } else {\n    tokenFileUrl = `https://${tokenFileUrl}`;\n  }\n\n  return tokenFileUrl;\n}\n\n/**\n *\n * @param zoneFile\n * @param publicKeyOrAddress\n *\n * @ignore\n */\nexport function resolveZoneFileToProfile(\n  zoneFile: any,\n  publicKeyOrAddress: string,\n  fetchFn: FetchFn = createFetchFn()\n): Promise<Record<string, any>> {\n  return new Promise((resolve, reject) => {\n    let zoneFileJson = null;\n    try {\n      zoneFileJson = parseZoneFile(zoneFile);\n      if (!zoneFileJson.hasOwnProperty('$origin')) {\n        zoneFileJson = null;\n      }\n    } catch (e) {\n      reject(e);\n    }\n\n    let tokenFileUrl: string | null = null;\n    if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n      tokenFileUrl = getTokenFileUrl(zoneFileJson);\n    } else {\n      try {\n        return resolve(Person.fromLegacyFormat(JSON.parse(zoneFile)).profile());\n      } catch (error) {\n        return reject(error);\n      }\n    }\n\n    if (tokenFileUrl) {\n      fetchFn(tokenFileUrl)\n        .then(response => response.text())\n        .then(responseText => JSON.parse(responseText))\n        .then(responseJson => {\n          const tokenRecords = responseJson;\n          const profile = extractProfile(tokenRecords[0].token, publicKeyOrAddress);\n          resolve(profile);\n        })\n        .catch(error => {\n          Logger.error(\n            `resolveZoneFileToProfile: error fetching token file ${tokenFileUrl}: ${error}`\n          );\n          reject(error);\n        });\n    } else {\n      Logger.debug('Token file url not found. Resolving to blank profile.');\n      resolve({});\n    }\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}