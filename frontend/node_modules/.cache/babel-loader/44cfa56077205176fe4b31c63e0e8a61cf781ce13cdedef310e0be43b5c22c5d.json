{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SECP256K1Client = void 0;\nvar hmac_1 = require(\"@noble/hashes/hmac\");\nvar sha256_1 = require(\"@noble/hashes/sha256\");\nvar secp = require(\"@noble/secp256k1\");\nvar ecdsaSigFormatter_1 = require(\"../ecdsaSigFormatter\");\nvar errors_1 = require(\"../errors\");\nvar utils_1 = require(\"@noble/hashes/utils\");\n// required to use noble secp https://github.com/paulmillr/noble-secp256k1\nsecp.utils.hmacSha256Sync = function (key) {\n  var h = hmac_1.hmac.create(sha256_1.sha256, key);\n  for (var _len = arguments.length, msgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    msgs[_key - 1] = arguments[_key];\n  }\n  msgs.forEach(function (msg) {\n    return h.update(msg);\n  });\n  return h.digest();\n};\nvar SECP256K1Client = /*#__PURE__*/function () {\n  function SECP256K1Client() {\n    _classCallCheck(this, SECP256K1Client);\n  }\n  _createClass(SECP256K1Client, null, [{\n    key: \"derivePublicKey\",\n    value: function derivePublicKey(privateKey) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (privateKey.length === 66) {\n        privateKey = privateKey.slice(0, 64);\n      }\n      if (privateKey.length < 64) {\n        // backward compatibly accept too short private keys\n        privateKey = privateKey.padStart(64, '0');\n      }\n      return (0, utils_1.bytesToHex)(secp.getPublicKey(privateKey, compressed));\n    }\n  }, {\n    key: \"signHash\",\n    value: function signHash(signingInputHash, privateKey) {\n      var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'jose';\n      // make sure the required parameters are provided\n      if (!signingInputHash || !privateKey) {\n        throw new errors_1.MissingParametersError('a signing input hash and private key are all required');\n      }\n      var derSignature = secp.signSync(signingInputHash, privateKey.slice(0, 64), {\n        der: true,\n        canonical: false\n      });\n      if (format === 'der') return (0, utils_1.bytesToHex)(derSignature);\n      if (format === 'jose') return (0, ecdsaSigFormatter_1.derToJose)(derSignature, 'ES256');\n      throw Error('Invalid signature format');\n    }\n  }, {\n    key: \"loadSignature\",\n    value: function loadSignature(joseSignature) {\n      // create and return the DER-formatted signature bytes\n      return (0, ecdsaSigFormatter_1.joseToDer)(joseSignature, 'ES256');\n    }\n  }, {\n    key: \"verifyHash\",\n    value: function verifyHash(signingInputHash, derSignatureBytes, publicKey) {\n      // make sure the required parameters are provided\n      if (!signingInputHash || !derSignatureBytes || !publicKey) {\n        throw new errors_1.MissingParametersError('a signing input hash, der signature, and public key are all required');\n      }\n      return secp.verify(derSignatureBytes, signingInputHash, publicKey, {\n        strict: false\n      });\n    }\n  }]);\n  return SECP256K1Client;\n}();\nexports.SECP256K1Client = SECP256K1Client;\nSECP256K1Client.algorithmName = 'ES256K';","map":{"version":3,"names":["hmac_1","require","sha256_1","secp","ecdsaSigFormatter_1","errors_1","utils_1","utils","hmacSha256Sync","key","h","hmac","create","sha256","_len","arguments","length","msgs","Array","_key","forEach","msg","update","digest","SECP256K1Client","_classCallCheck","_createClass","value","derivePublicKey","privateKey","compressed","undefined","slice","padStart","bytesToHex","getPublicKey","signHash","signingInputHash","format","MissingParametersError","derSignature","signSync","der","canonical","derToJose","Error","loadSignature","joseSignature","joseToDer","verifyHash","derSignatureBytes","publicKey","verify","strict","exports","algorithmName"],"sources":["cryptoClients/secp256k1.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}