{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { decodeToken } from 'jsontokens';\nimport { BLOCKSTACK_HANDLER, getGlobalObject } from '@stacks/common';\nimport { createFetchFn } from '@stacks/network';\nexport function getAuthRequestFromURL() {\n  var _params$get$replaceAl, _params$get;\n  var location = getGlobalObject('location', {\n    throwIfUnavailable: true,\n    usageDesc: 'getAuthRequestFromURL'\n  });\n  var params = new URLSearchParams(location === null || location === void 0 ? void 0 : location.search);\n  return (_params$get$replaceAl = (_params$get = params.get('authRequest')) === null || _params$get === void 0 ? void 0 : _params$get.replaceAll(\"\".concat(BLOCKSTACK_HANDLER, \":\"), '')) !== null && _params$get$replaceAl !== void 0 ? _params$get$replaceAl : null;\n}\nexport function fetchAppManifest(_x) {\n  return _fetchAppManifest.apply(this, arguments);\n}\nfunction _fetchAppManifest() {\n  _fetchAppManifest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authRequest) {\n    var fetchFn,\n      payload,\n      manifestURI,\n      response,\n      responseText,\n      responseJSON,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          fetchFn = _args.length > 1 && _args[1] !== undefined ? _args[1] : createFetchFn();\n          if (authRequest) {\n            _context.next = 3;\n            break;\n          }\n          throw new Error('Invalid auth request');\n        case 3:\n          payload = decodeToken(authRequest).payload;\n          if (!(typeof payload === 'string')) {\n            _context.next = 6;\n            break;\n          }\n          throw new Error('Unexpected token payload type of string');\n        case 6:\n          manifestURI = payload.manifest_uri;\n          _context.prev = 7;\n          _context.next = 10;\n          return fetchFn(manifestURI);\n        case 10:\n          response = _context.sent;\n          _context.next = 13;\n          return response.text();\n        case 13:\n          responseText = _context.sent;\n          responseJSON = JSON.parse(responseText);\n          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, responseJSON), {}, {\n            manifestURI: manifestURI\n          }));\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](7);\n          console.log(_context.t0);\n          throw new Error('Could not fetch manifest.json');\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[7, 18]]);\n  }));\n  return _fetchAppManifest.apply(this, arguments);\n}","map":{"version":3,"names":["decodeToken","BLOCKSTACK_HANDLER","getGlobalObject","createFetchFn","getAuthRequestFromURL","_params$get$replaceAl","_params$get","location","throwIfUnavailable","usageDesc","params","URLSearchParams","search","get","replaceAll","concat","fetchAppManifest","_x","_fetchAppManifest","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authRequest","fetchFn","payload","manifestURI","response","responseText","responseJSON","_args","wrap","_callee$","_context","prev","next","length","undefined","Error","manifest_uri","sent","text","JSON","parse","abrupt","_objectSpread","t0","console","log","stop"],"sources":["C:\\Users\\rajde\\gitrep\\deploy\\frontend\\node_modules\\@stacks\\auth\\src\\provider.ts"],"sourcesContent":["import { decodeToken } from 'jsontokens';\nimport { BLOCKSTACK_HANDLER, getGlobalObject } from '@stacks/common';\nimport { createFetchFn, FetchFn } from '@stacks/network';\n\n/**\n * Retrieves the authentication request from the query string\n * @return {String|null} the authentication request or `null` if\n * the query string parameter `authRequest` is not found\n * @private\n * @ignore\n */\nexport function getAuthRequestFromURL(): string | null {\n  const location = getGlobalObject('location', {\n    throwIfUnavailable: true,\n    usageDesc: 'getAuthRequestFromURL',\n  });\n\n  const params = new URLSearchParams(location?.search);\n  return params.get('authRequest')?.replaceAll(`${BLOCKSTACK_HANDLER}:`, '') ?? null;\n}\n\n/**\n * Fetches the contents of the manifest file specified in the authentication request\n *\n * @param  {String} authRequest encoded and signed authentication request\n * @return {Promise<Object|String>} Returns a `Promise` that resolves to the JSON\n * object manifest file unless there's an error in which case rejects with an error\n * message.\n * @private\n * @ignore\n */\nexport async function fetchAppManifest(\n  authRequest: string,\n  fetchFn: FetchFn = createFetchFn()\n): Promise<any> {\n  if (!authRequest) {\n    throw new Error('Invalid auth request');\n  }\n  const payload = decodeToken(authRequest).payload;\n  if (typeof payload === 'string') {\n    throw new Error('Unexpected token payload type of string');\n  }\n  const manifestURI = payload.manifest_uri as string;\n  try {\n    // Logger.debug(`Fetching manifest from ${manifestURI}`)\n    const response = await fetchFn(manifestURI);\n    const responseText = await response.text();\n    const responseJSON = JSON.parse(responseText);\n    return { ...responseJSON, manifestURI };\n  } catch (error) {\n    console.log(error);\n    throw new Error('Could not fetch manifest.json');\n  }\n}\n"],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,YAAY;AACxC,SAASC,kBAAkB,EAAEC,eAAe,QAAQ,gBAAgB;AACpE,SAASC,aAAa,QAAiB,iBAAiB;AASxD,OAAM,SAAUC,qBAAqBA,CAAA;EAAA,IAAAC,qBAAA,EAAAC,WAAA;EACnC,IAAMC,QAAQ,GAAGL,eAAe,CAAC,UAAU,EAAE;IAC3CM,kBAAkB,EAAE,IAAI;IACxBC,SAAS,EAAE;GACZ,CAAC;EAEF,IAAMC,MAAM,GAAG,IAAIC,eAAe,CAACJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,MAAM,CAAC;EACpD,QAAAP,qBAAA,IAAAC,WAAA,GAAOI,MAAM,CAACG,GAAG,CAAC,aAAa,CAAC,cAAAP,WAAA,uBAAzBA,WAAA,CAA2BQ,UAAU,IAAAC,MAAA,CAAId,kBAAkB,QAAK,EAAE,CAAC,cAAAI,qBAAA,cAAAA,qBAAA,GAAI,IAAI;AACpF;AAYA,gBAAsBW,gBAAgBA,CAAAC,EAAA;EAAA,OAAAC,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAsBrC,SAAAF,kBAAA;EAAAA,iBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAtBM,SAAAC,QACLC,WAAmB;IAAA,IAAAC,OAAA;MAAAC,OAAA;MAAAC,WAAA;MAAAC,QAAA;MAAAC,YAAA;MAAAC,YAAA;MAAAC,KAAA,GAAAZ,SAAA;IAAA,OAAAE,mBAAA,GAAAW,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACnBX,OAAA,GAAAM,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAmB7B,aAAa,EAAE;UAAA,IAE7BsB,WAAW;YAAAU,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACR,IAAIG,KAAK,CAAC,sBAAsB,CAAC;QAAA;UAEnCb,OAAO,GAAG3B,WAAW,CAACyB,WAAW,CAAC,CAACE,OAAO;UAAA,MAC5C,OAAOA,OAAO,KAAK,QAAQ;YAAAQ,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACvB,IAAIG,KAAK,CAAC,yCAAyC,CAAC;QAAA;UAEtDZ,WAAW,GAAGD,OAAO,CAACc,YAAsB;UAAAN,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAGzBX,OAAO,CAACE,WAAW,CAAC;QAAA;UAArCC,QAAQ,GAAAM,QAAA,CAAAO,IAAA;UAAAP,QAAA,CAAAE,IAAA;UAAA,OACaR,QAAQ,CAACc,IAAI,EAAE;QAAA;UAApCb,YAAY,GAAAK,QAAA,CAAAO,IAAA;UACZX,YAAY,GAAGa,IAAI,CAACC,KAAK,CAACf,YAAY,CAAC;UAAA,OAAAK,QAAA,CAAAW,MAAA,WAAAC,aAAA,CAAAA,aAAA,KACjChB,YAAY;YAAEH,WAAW,EAAXA;UAAW;QAAA;UAAAO,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;UAErCc,OAAO,CAACC,GAAG,CAAAf,QAAA,CAAAa,EAAM,CAAC;UAAC,MACb,IAAIR,KAAK,CAAC,+BAA+B,CAAC;QAAA;QAAA;UAAA,OAAAL,QAAA,CAAAgB,IAAA;MAAA;IAAA,GAAA3B,OAAA;EAAA,CAEnD;EAAA,OAAAN,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}