{"ast":null,"code":"import _toConsumableArray from \"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/rajde/gitrep/deploy/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { Logger } from './logger';\nexport var BLOCKSTACK_HANDLER = 'blockstack';\nexport function nextYear() {\n  return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nexport function nextMonth() {\n  return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nexport function nextHour() {\n  return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nexport function megabytesToBytes(megabytes) {\n  if (!Number.isFinite(megabytes)) {\n    return 0;\n  }\n  return Math.floor(megabytes * 1024 * 1024);\n}\nexport function getAesCbcOutputLength(inputByteLength) {\n  var cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\nexport function getBase64OutputLength(inputByteLength) {\n  var encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\nexport function updateQueryStringParameter(uri, key, value) {\n  var re = new RegExp(\"([?&])\".concat(key, \"=.*?(&|$)\"), 'i');\n  var separator = uri.indexOf('?') !== -1 ? '&' : '?';\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\".concat(key, \"=\").concat(value, \"$2\"));\n  } else {\n    return \"\".concat(uri).concat(separator).concat(key, \"=\").concat(value);\n  }\n}\nexport function isLaterVersion(v1, v2) {\n  if (v1 === undefined || v1 === '') {\n    v1 = '0.0.0';\n  }\n  if (v2 === undefined || v1 === '') {\n    v2 = '0.0.0';\n  }\n  var v1tuple = v1.split('.').map(function (x) {\n    return parseInt(x, 10);\n  });\n  var v2tuple = v2.split('.').map(function (x) {\n    return parseInt(x, 10);\n  });\n  for (var index = 0; index < v2.length; index++) {\n    if (index >= v1.length) {\n      v2tuple.push(0);\n    }\n    if (v1tuple[index] < v2tuple[index]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function makeUUID4() {\n  var d = new Date().getTime();\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n    d += performance.now();\n  }\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n}\nexport function isSameOriginAbsoluteUrl(uri1, uri2) {\n  try {\n    var parsedUri1 = new URL(uri1);\n    var parsedUri2 = new URL(uri2);\n    var port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n    var port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n    var match = {\n      scheme: parsedUri1.protocol === parsedUri2.protocol,\n      hostname: parsedUri1.hostname === parsedUri2.hostname,\n      port: port1 === port2,\n      absolute: (uri1.includes('http://') || uri1.includes('https://')) && (uri2.includes('http://') || uri2.includes('https://'))\n    };\n    return match.scheme && match.hostname && match.port && match.absolute;\n  } catch (error) {\n    console.log(error);\n    console.log('Parsing error in same URL origin check');\n    return false;\n  }\n}\nexport function getGlobalScope() {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n  if (usageDesc) {\n    return \"Use of '\".concat(usageDesc, \"' requires `\").concat(apiName, \"` which is unavailable on the '\").concat(scopeObject, \"' object within the currently executing environment.\");\n  } else {\n    return \"`\".concat(apiName, \"` is unavailable on the '\").concat(scopeObject, \"' object within the currently executing environment.\");\n  }\n}\nexport function getGlobalObject(name) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    throwIfUnavailable = _ref.throwIfUnavailable,\n    usageDesc = _ref.usageDesc,\n    returnEmptyObject = _ref.returnEmptyObject;\n  var globalScope = undefined;\n  try {\n    globalScope = getGlobalScope();\n    if (globalScope) {\n      var obj = globalScope[name];\n      if (obj) {\n        return obj;\n      }\n    }\n  } catch (error) {\n    Logger.error(\"Error getting object '\".concat(name, \"' from global scope '\").concat(globalScope, \"': \").concat(error));\n  }\n  if (throwIfUnavailable) {\n    var errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n    Logger.error(errMsg);\n    throw new Error(errMsg);\n  }\n  if (returnEmptyObject) {\n    return {};\n  }\n  return undefined;\n}\nexport function getGlobalObjects(names) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    throwIfUnavailable = _ref2.throwIfUnavailable,\n    usageDesc = _ref2.usageDesc,\n    returnEmptyObject = _ref2.returnEmptyObject;\n  var globalScope;\n  try {\n    globalScope = getGlobalScope();\n  } catch (error) {\n    Logger.error(\"Error getting global scope: \".concat(error));\n    if (throwIfUnavailable) {\n      var errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n      Logger.error(errMsg);\n      throw errMsg;\n    } else if (returnEmptyObject) {\n      globalScope = {};\n    }\n  }\n  var result = {};\n  for (var i = 0; i < names.length; i++) {\n    var name = names[i];\n    try {\n      if (globalScope) {\n        var obj = globalScope[name];\n        if (obj) {\n          result[name] = obj;\n        } else if (throwIfUnavailable) {\n          var _errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n          Logger.error(_errMsg);\n          throw new Error(_errMsg);\n        } else if (returnEmptyObject) {\n          result[name] = {};\n        }\n      }\n    } catch (error) {\n      if (throwIfUnavailable) {\n        var _errMsg2 = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(_errMsg2);\n        throw new Error(_errMsg2);\n      }\n    }\n  }\n  return result;\n}\nexport function intToBytes(value, signed, byteLength) {\n  return bigIntToBytes(intToBigInt(value, signed), byteLength);\n}\nexport function intToBigInt(value, signed) {\n  var parsedValue = value;\n  if (typeof parsedValue === 'number') {\n    if (!Number.isInteger(parsedValue)) {\n      throw new RangeError(\"Invalid value. Values of type 'number' must be an integer.\");\n    }\n    if (parsedValue > Number.MAX_SAFE_INTEGER) {\n      throw new RangeError(\"Invalid value. Values of type 'number' must be less than or equal to \".concat(Number.MAX_SAFE_INTEGER, \". For larger values, try using a BigInt instead.\"));\n    }\n    return BigInt(parsedValue);\n  }\n  if (typeof parsedValue === 'string') {\n    if (parsedValue.toLowerCase().startsWith('0x')) {\n      var hex = parsedValue.slice(2);\n      hex = hex.padStart(hex.length + hex.length % 2, '0');\n      parsedValue = hexToBytes(hex);\n    } else {\n      try {\n        return BigInt(parsedValue);\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          throw new RangeError(\"Invalid value. String integer '\".concat(parsedValue, \"' is not finite.\"));\n        }\n      }\n    }\n  }\n  if (typeof parsedValue === 'bigint') {\n    return parsedValue;\n  }\n  if (parsedValue instanceof Uint8Array) {\n    if (signed) {\n      var bn = fromTwos(BigInt(\"0x\".concat(bytesToHex(parsedValue))), BigInt(parsedValue.byteLength * 8));\n      return BigInt(bn.toString());\n    } else {\n      return BigInt(\"0x\".concat(bytesToHex(parsedValue)));\n    }\n  }\n  if (parsedValue != null && typeof parsedValue === 'object' && parsedValue.constructor.name === 'BN') {\n    return BigInt(parsedValue.toString());\n  }\n  throw new TypeError(\"Invalid value type. Must be a number, bigint, integer-string, hex-string, or Uint8Array.\");\n}\nexport function with0x(value) {\n  return value.startsWith('0x') ? value : \"0x\".concat(value);\n}\nexport function hexToBigInt(hex) {\n  if (typeof hex !== 'string') throw new TypeError(\"hexToBigInt: expected string, got \".concat(typeof hex));\n  return BigInt(\"0x\".concat(hex));\n}\nexport function intToHex(integer) {\n  var lengthBytes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n  var value = typeof integer === 'bigint' ? integer : intToBigInt(integer, false);\n  return value.toString(16).padStart(lengthBytes * 2, '0');\n}\nexport function hexToInt(hex) {\n  return parseInt(hex, 16);\n}\nexport function bigIntToBytes(value) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  var hex = intToHex(value, length);\n  return hexToBytes(hex);\n}\nexport function toTwos(value, width) {\n  if (value < -(BigInt(1) << width - BigInt(1)) || (BigInt(1) << width - BigInt(1)) - BigInt(1) < value) {\n    throw \"Unable to represent integer in width: \".concat(width);\n  }\n  if (value >= BigInt(0)) {\n    return BigInt(value);\n  }\n  return value + (BigInt(1) << width);\n}\nfunction nthBit(value, n) {\n  return value & BigInt(1) << n;\n}\nexport function fromTwos(value, width) {\n  if (nthBit(value, width - BigInt(1))) {\n    return value - (BigInt(1) << width);\n  }\n  return value;\n}\nvar hexes = Array.from({\n  length: 256\n}, function (_, i) {\n  return i.toString(16).padStart(2, '0');\n});\nexport function bytesToHex(uint8a) {\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  var hex = '';\n  var _iterator = _createForOfIteratorHelper(uint8a),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var u = _step.value;\n      hex += hexes[u];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return hex;\n}\nexport function hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError(\"hexToBytes: expected string, got \".concat(typeof hex));\n  }\n  var paddedHex = hex.length % 2 ? \"0\".concat(hex) : hex;\n  var array = new Uint8Array(paddedHex.length / 2);\n  for (var i = 0; i < array.length; i++) {\n    var j = i * 2;\n    var hexByte = paddedHex.slice(j, j + 2);\n    var byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\nexport function utf8ToBytes(str) {\n  return new TextEncoder().encode(str);\n}\nexport function bytesToUtf8(arr) {\n  return new TextDecoder().decode(arr);\n}\nexport function asciiToBytes(str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; i++) {\n    byteArray.push(str.charCodeAt(i) & 0xff);\n  }\n  return new Uint8Array(byteArray);\n}\nexport function bytesToAscii(arr) {\n  return String.fromCharCode.apply(null, arr);\n}\nfunction isNotOctet(octet) {\n  return !Number.isInteger(octet) || octet < 0 || octet > 255;\n}\nexport function octetsToBytes(numbers) {\n  if (numbers.some(isNotOctet)) throw new Error('Some values are invalid bytes.');\n  return new Uint8Array(numbers);\n}\nexport function toBytes(data) {\n  if (typeof data === 'string') return utf8ToBytes(data);\n  if (data instanceof Uint8Array) return data;\n  throw new TypeError(\"Expected input type is (Uint8Array | string) but got (\".concat(typeof data, \")\"));\n}\nexport function concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n  if (!arrays.every(function (a) {\n    return a instanceof Uint8Array;\n  })) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  var length = arrays.reduce(function (a, arr) {\n    return a + arr.length;\n  }, 0);\n  var result = new Uint8Array(length);\n  for (var i = 0, pad = 0; i < arrays.length; i++) {\n    var arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\nexport function concatArray(elements) {\n  return concatBytes.apply(void 0, _toConsumableArray(elements.map(function (e) {\n    if (typeof e === 'number') return octetsToBytes([e]);\n    if (e instanceof Array) return octetsToBytes(e);\n    return e;\n  })));\n}\nexport function isInstance(object, type) {\n  var _object$constructor;\n  return object instanceof type || (object === null || object === void 0 || (_object$constructor = object.constructor) === null || _object$constructor === void 0 || (_object$constructor = _object$constructor.name) === null || _object$constructor === void 0 ? void 0 : _object$constructor.toLowerCase()) === type.name;\n}","map":{"version":3,"names":["Logger","BLOCKSTACK_HANDLER","nextYear","Date","setFullYear","getFullYear","nextMonth","setMonth","getMonth","nextHour","setHours","getHours","megabytesToBytes","megabytes","Number","isFinite","Math","floor","getAesCbcOutputLength","inputByteLength","cipherTextLength","getBase64OutputLength","encodedLength","ceil","updateQueryStringParameter","uri","key","value","re","RegExp","concat","separator","indexOf","match","replace","isLaterVersion","v1","v2","undefined","v1tuple","split","map","x","parseInt","v2tuple","index","length","push","makeUUID4","d","getTime","performance","now","c","r","random","toString","isSameOriginAbsoluteUrl","uri1","uri2","parsedUri1","URL","parsedUri2","port1","port","protocol","port2","scheme","hostname","absolute","includes","error","console","log","getGlobalScope","self","window","global","Error","getAPIUsageErrorMessage","scopeObject","apiName","usageDesc","getGlobalObject","name","_ref","arguments","throwIfUnavailable","returnEmptyObject","globalScope","obj","errMsg","getGlobalObjects","names","_ref2","result","i","intToBytes","signed","byteLength","bigIntToBytes","intToBigInt","parsedValue","isInteger","RangeError","MAX_SAFE_INTEGER","BigInt","toLowerCase","startsWith","hex","slice","padStart","hexToBytes","SyntaxError","Uint8Array","bn","fromTwos","bytesToHex","constructor","TypeError","with0x","hexToBigInt","intToHex","integer","lengthBytes","hexToInt","toTwos","width","nthBit","n","hexes","Array","from","_","uint8a","_iterator","_createForOfIteratorHelper","_step","s","done","u","err","e","f","paddedHex","array","j","hexByte","byte","isNaN","utf8ToBytes","str","TextEncoder","encode","bytesToUtf8","arr","TextDecoder","decode","asciiToBytes","byteArray","charCodeAt","bytesToAscii","String","fromCharCode","apply","isNotOctet","octet","octetsToBytes","numbers","some","toBytes","data","concatBytes","_len","arrays","_key","every","a","reduce","pad","set","concatArray","elements","_toConsumableArray","isInstance","object","type","_object$constructor"],"sources":["C:\\Users\\rajde\\gitrep\\deploy\\frontend\\node_modules\\@stacks\\common\\src\\utils.ts"],"sourcesContent":["import { Logger } from './logger';\n\n/**\n *  @ignore\n */\nexport const BLOCKSTACK_HANDLER = 'blockstack';\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextYear() {\n  return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextMonth() {\n  return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextHour() {\n  return new Date(new Date().setHours(new Date().getHours() + 1));\n}\n\n/**\n * Converts megabytes to bytes. Returns 0 if the input is not a finite number.\n * @ignore\n */\nexport function megabytesToBytes(megabytes: number): number {\n  if (!Number.isFinite(megabytes)) {\n    return 0;\n  }\n  return Math.floor(megabytes * 1024 * 1024);\n}\n\n/**\n * Calculate the AES-CBC ciphertext output byte length a given input length.\n * AES has a fixed block size of 16-bytes regardless key size.\n * @ignore\n */\nexport function getAesCbcOutputLength(inputByteLength: number) {\n  // AES-CBC block mode rounds up to the next block size.\n  const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\n\n/**\n * Calculate the base64 encoded string length for a given input length.\n * This is equivalent to the byte length when the string is ASCII or UTF8-8\n * encoded.\n * @param number\n */\nexport function getBase64OutputLength(inputByteLength: number) {\n  const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\n\n/**\n * Query Strings\n * @private\n * @ignore\n */\n\nexport function updateQueryStringParameter(uri: string, key: string, value: string) {\n  const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n  if (uri.match(re)) {\n    return uri.replace(re, `$1${key}=${value}$2`);\n  } else {\n    return `${uri}${separator}${key}=${value}`;\n  }\n}\n\n/**\n * Versioning\n * @param {string} v1 - the left half of the version inequality\n * @param {string} v2 - right half of the version inequality\n * @returns {bool} iff v1 >= v2\n * @private\n * @ignore\n */\n\nexport function isLaterVersion(v1: string, v2: string) {\n  if (v1 === undefined || v1 === '') {\n    v1 = '0.0.0';\n  }\n\n  if (v2 === undefined || v1 === '') {\n    v2 = '0.0.0';\n  }\n\n  const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n  const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n\n  for (let index = 0; index < v2.length; index++) {\n    if (index >= v1.length) {\n      v2tuple.push(0);\n    }\n    if (v1tuple[index] < v2tuple[index]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * UUIDs\n * @private\n * @ignore\n */\nexport function makeUUID4() {\n  let d = new Date().getTime();\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n    d += performance.now(); // use high-precision timer if available\n  }\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n\n/**\n * Checks if both urls pass the same origin check & are absolute\n * @param  {[type]}  uri1 first uri to check\n * @param  {[type]}  uri2 second uri to check\n * @return {Boolean} true if they pass the same origin check\n * @private\n * @ignore\n */\nexport function isSameOriginAbsoluteUrl(uri1: string, uri2: string) {\n  try {\n    const parsedUri1 = new URL(uri1);\n    const parsedUri2 = new URL(uri2);\n\n    const port1 =\n      parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n    const port2 =\n      parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n\n    const match = {\n      scheme: parsedUri1.protocol === parsedUri2.protocol,\n      hostname: parsedUri1.hostname === parsedUri2.hostname,\n      port: port1 === port2,\n      absolute:\n        (uri1.includes('http://') || uri1.includes('https://')) &&\n        (uri2.includes('http://') || uri2.includes('https://')),\n    };\n\n    return match.scheme && match.hostname && match.port && match.absolute;\n  } catch (error) {\n    console.log(error);\n    console.log('Parsing error in same URL origin check');\n    // Parse error\n    return false;\n  }\n}\n\n/**\n * Returns the global scope `Window`, `WorkerGlobalScope`, or `NodeJS.Global` if available in the\n * currently executing environment.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope\n *\n * This could be switched to `globalThis` once it is standardized and widely available.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\n * @ignore\n */\nexport function getGlobalScope(): Window {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  // This function is meant to be called when accessing APIs that are typically only available in\n  // web-browser/DOM environments, but we also want to support situations where running in Node.js\n  // environment, and a polyfill was added to the Node.js `global` object scope without adding the\n  // `window` global object as well.\n  if (typeof global !== 'undefined') {\n    return global as unknown as Window;\n  }\n  throw new Error(\n    'Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available'\n  );\n}\n\nfunction getAPIUsageErrorMessage(\n  scopeObject: unknown,\n  apiName: string,\n  usageDesc?: string\n): string {\n  if (usageDesc) {\n    return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  } else {\n    return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  }\n}\n\ninterface GetGlobalObjectOptions {\n  /**\n   * Throw an error if the object is not found.\n   * @default false\n   */\n  throwIfUnavailable?: boolean;\n  /**\n   * Additional information to include in an error if thrown.\n   */\n  usageDesc?: string;\n  /**\n   * If the object is not found, return an new empty object instead of undefined.\n   * Requires [[throwIfUnavailable]] to be falsey.\n   * @default false\n   */\n  returnEmptyObject?: boolean;\n}\n\n/**\n * Returns an object from the global scope (`Window` or `WorkerGlobalScope`) if it\n * is available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable and will be\n * `undefined` unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nexport function getGlobalObject<K extends Extract<keyof Window, string>>(\n  name: K,\n  { throwIfUnavailable, usageDesc, returnEmptyObject }: GetGlobalObjectOptions = {}\n): Window[K] | undefined {\n  let globalScope: Window | undefined = undefined;\n  try {\n    globalScope = getGlobalScope();\n    if (globalScope) {\n      const obj = globalScope[name];\n      if (obj) {\n        return obj;\n      }\n    }\n  } catch (error) {\n    Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n  }\n  if (throwIfUnavailable) {\n    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n    Logger.error(errMsg);\n    throw new Error(errMsg);\n  }\n  if (returnEmptyObject) {\n    return {} as any;\n  }\n  return undefined;\n}\n\n/**\n * Returns a specified subset of objects from the global scope (`Window` or `WorkerGlobalScope`)\n * if they are available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable will be `undefined`\n * unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nexport function getGlobalObjects<K extends Extract<keyof Window, string>>(\n  names: K[],\n  { throwIfUnavailable, usageDesc, returnEmptyObject }: GetGlobalObjectOptions = {}\n): Pick<Window, K> {\n  let globalScope: Window | undefined;\n  try {\n    globalScope = getGlobalScope();\n  } catch (error) {\n    Logger.error(`Error getting global scope: ${error}`);\n    if (throwIfUnavailable) {\n      const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n      Logger.error(errMsg);\n      throw errMsg;\n    } else if (returnEmptyObject) {\n      globalScope = {} as any;\n    }\n  }\n\n  const result: Pick<Window, K> = {} as any;\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    try {\n      if (globalScope) {\n        const obj = globalScope[name];\n        if (obj) {\n          result[name] = obj;\n        } else if (throwIfUnavailable) {\n          const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n          Logger.error(errMsg);\n          throw new Error(errMsg);\n        } else if (returnEmptyObject) {\n          result[name] = {} as any;\n        }\n      }\n    } catch (error) {\n      if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n      }\n    }\n  }\n  return result;\n}\n// After removing bn.js library provide backward compatibility for users passing bn.js instance\ntype BN = import('bn.js'); // Type only import from @types/bn.js\nexport type IntegerType = number | string | bigint | Uint8Array | BN;\n\nexport function intToBytes(value: IntegerType, signed: boolean, byteLength: number): Uint8Array {\n  return bigIntToBytes(intToBigInt(value, signed), byteLength);\n}\n\nexport function intToBigInt(value: IntegerType, signed: boolean): bigint {\n  let parsedValue = value;\n\n  if (typeof parsedValue === 'number') {\n    if (!Number.isInteger(parsedValue)) {\n      throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n    }\n    if (parsedValue > Number.MAX_SAFE_INTEGER) {\n      throw new RangeError(\n        `Invalid value. Values of type 'number' must be less than or equal to ${Number.MAX_SAFE_INTEGER}. For larger values, try using a BigInt instead.`\n      );\n    }\n    return BigInt(parsedValue);\n  }\n  if (typeof parsedValue === 'string') {\n    // If hex string then convert to bytes then fall through to the bytes condition\n    if (parsedValue.toLowerCase().startsWith('0x')) {\n      // Trim '0x' hex-prefix\n      let hex = parsedValue.slice(2);\n\n      // Allow odd-length strings like `0xf` -- some libs output these, or even just `0x${num.toString(16)}`\n      hex = hex.padStart(hex.length + (hex.length % 2), '0');\n\n      parsedValue = hexToBytes(hex);\n    } else {\n      try {\n        return BigInt(parsedValue);\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          throw new RangeError(`Invalid value. String integer '${parsedValue}' is not finite.`);\n        }\n      }\n    }\n  }\n  if (typeof parsedValue === 'bigint') {\n    return parsedValue;\n  }\n  if (parsedValue instanceof Uint8Array) {\n    if (signed) {\n      // Allow byte arrays smaller than 128-bits to be passed.\n      // This allows positive signed ints like `0x08` (8) or negative signed\n      // ints like `0xf8` (-8) to be passed without having to pad to 16 bytes.\n      const bn = fromTwos(\n        BigInt(`0x${bytesToHex(parsedValue)}`),\n        BigInt(parsedValue.byteLength * 8)\n      );\n      return BigInt(bn.toString());\n    } else {\n      return BigInt(`0x${bytesToHex(parsedValue)}`);\n    }\n  }\n  // After removing bn.js library provide backward compatibility for users passing bn.js instance\n  // For backward compatibility with bn.js check if it's a bn.js instance\n  if (\n    parsedValue != null &&\n    typeof parsedValue === 'object' &&\n    parsedValue.constructor.name === 'BN'\n  ) {\n    return BigInt(parsedValue.toString());\n  }\n  throw new TypeError(\n    `Invalid value type. Must be a number, bigint, integer-string, hex-string, or Uint8Array.`\n  );\n}\n\nexport function with0x(value: string): string {\n  return value.startsWith('0x') ? value : `0x${value}`;\n}\n\n/**\n * Converts hex input string to bigint\n * @param hex - hex input string without 0x prefix and in big endian format\n * @example \"6c7cde4d702830c1db34ef7c19e2776f59107afef39084776fc88bc78dbb9656\"\n * @ignore\n */\nexport function hexToBigInt(hex: string): bigint {\n  if (typeof hex !== 'string')\n    throw new TypeError(`hexToBigInt: expected string, got ${typeof hex}`);\n  // Big Endian\n  return BigInt(`0x${hex}`);\n}\n\n/**\n * Converts IntegerType to hex string\n * @ignore\n */\nexport function intToHex(integer: IntegerType, lengthBytes = 8): string {\n  const value = typeof integer === 'bigint' ? integer : intToBigInt(integer, false);\n  return value.toString(16).padStart(lengthBytes * 2, '0');\n}\n\n/**\n * Converts hex string to integer\n * @ignore\n */\nexport function hexToInt(hex: string): number {\n  return parseInt(hex, 16);\n}\n\n/**\n * Converts bigint to byte array\n * @param value bigint value to be converted\n * @param length byte array optional length\n * @return {Uint8Array} byte array\n */\nexport function bigIntToBytes(value: bigint, length: number = 16): Uint8Array {\n  const hex = intToHex(value, length);\n  return hexToBytes(hex);\n}\n\n/**\n * Converts from signed number to two's complement\n * MIN_VALUE = -(1 << (width - 1))\n * MAX_VALUE =  (1 << (width - 1)) - 1\n * @ignore\n */\nexport function toTwos(value: bigint, width: bigint): bigint {\n  if (\n    value < -(BigInt(1) << (width - BigInt(1))) ||\n    (BigInt(1) << (width - BigInt(1))) - BigInt(1) < value\n  ) {\n    throw `Unable to represent integer in width: ${width}`;\n  }\n  if (value >= BigInt(0)) {\n    return BigInt(value);\n  }\n  return value + (BigInt(1) << width);\n}\n\n/**\n * Returns nth bit (right-to-left, zero-indexed)\n */\nfunction nthBit(value: bigint, n: bigint) {\n  return value & (BigInt(1) << n);\n}\n\n/**\n * Converts from two's complement to signed number\n * @ignore\n */\nexport function fromTwos(value: bigint, width: bigint) {\n  if (nthBit(value, width - BigInt(1))) {\n    return value - (BigInt(1) << width);\n  }\n  return value;\n}\n\n// The following methods are based on `@noble/hashes` implementation\n// https://github.com/paulmillr/noble-hashes\n// Copyright (c) 2022 Paul Miller (https://paulmillr.com)\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the “Software”), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\nconst hexes = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n\n/**\n * Converts bytes to the equivalent hex string\n * @example\n * ```\n * bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n * ```\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (const u of uint8a) {\n    hex += hexes[u];\n  }\n  return hex;\n}\n\n/**\n * Converts a hex string to the equivalent bytes\n * @example\n * ```\n * hexToBytes('deadbeef') // Uint8Array(4) [ 222, 173, 190, 239 ]\n * ```\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError(`hexToBytes: expected string, got ${typeof hex}`);\n  }\n  const paddedHex = hex.length % 2 ? `0${hex}` : hex; // left pad with a zero if odd length\n  const array = new Uint8Array(paddedHex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = paddedHex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts a UTF-8 string to the equivalent bytes\n * @example\n * ```\n * utf8ToBytes('stacks Ӿ'); // Uint8Array(9) [ 115, 116, 97, 99, 107, 115, 32, 211, 190 ];\n * ```\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  return new TextEncoder().encode(str);\n}\n\n/**\n * Converts bytes to the equivalent UTF-8 string\n * @example\n * ```\n * bytesToUtf8(Uint8Array.from([115, 116, 97, 99, 107, 115, 32, 211, 190])); // 'stacks Ӿ'\n * ```\n */\nexport function bytesToUtf8(arr: Uint8Array): string {\n  return new TextDecoder().decode(arr);\n}\n\n/**\n * Converts an ASCII string to the equivalent bytes\n * @example\n * ```\n * asciiToBytes('stacks $'); // Uint8Array(8) [ 115, 116, 97, 99, 107, 115, 32, 36 ]\n * ```\n */\nexport function asciiToBytes(str: string) {\n  const byteArray = [];\n  for (let i = 0; i < str.length; i++) {\n    byteArray.push(str.charCodeAt(i) & 0xff); // ignore second bytes of UTF-16 character\n  }\n  return new Uint8Array(byteArray);\n}\n\n/**\n * Converts bytes to the equivalent ASCII string\n * @example\n * ```\n * bytesToAscii(Uint8Array.from([115, 116, 97, 99, 107, 115, 32, 36])); // 'stacks $'\n * ```\n */\nexport function bytesToAscii(arr: Uint8Array) {\n  return String.fromCharCode.apply(null, arr as any as number[]);\n}\n\nfunction isNotOctet(octet: number) {\n  return !Number.isInteger(octet) || octet < 0 || octet > 255;\n}\n\n/** @ignore */\nexport function octetsToBytes(numbers: number[]) {\n  if (numbers.some(isNotOctet)) throw new Error('Some values are invalid bytes.');\n  return new Uint8Array(numbers);\n}\n\n/** @ignore */\nexport function toBytes(data: Uint8Array | string): Uint8Array {\n  if (typeof data === 'string') return utf8ToBytes(data);\n  if (data instanceof Uint8Array) return data;\n  throw new TypeError(`Expected input type is (Uint8Array | string) but got (${typeof data})`);\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n * @ignore\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every(a => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n/** @ignore */\nexport function concatArray(elements: (Uint8Array | number[] | number)[]) {\n  return concatBytes(\n    ...elements.map(e => {\n      if (typeof e === 'number') return octetsToBytes([e]);\n      if (e instanceof Array) return octetsToBytes(e);\n      return e;\n    })\n  );\n}\n\n/**\n * Better `instanceof` check for types in different environments\n * @ignore\n */\nexport function isInstance(object: any, type: any) {\n  return object instanceof type || object?.constructor?.name?.toLowerCase() === type.name;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}